name: 'Nightly Releases'

on:
  schedule:
    - cron: '0 7 * * *'

jobs:
  nightly:
    name: 'Nightly Release'
    if: github.repository == 'pmndrs/react-spring'
    runs-on: ubuntu-latest
    outputs:
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3

      - name: Check for changes
        id: version
        run: |
          # get latest commit sha
          SHA=$(git rev-parse HEAD)
          # get first 7 characters of sha
          SHORT_SHA=${SHA::7}
          # get latest nightly tag
          LATEST_NIGHTLY_TAG=$(git tag -l v0.0.0-nightly-\* --sort=-creatordate | head -n 1)
          # check if last commit to main would be the nightly tag we're about to create (minus the date)
          # if it is, we'll skip the nightly creation
          # if not, we'll create a new nightly tag
          if [[ ${LATEST_NIGHTLY_TAG} == v0.0.0-nightly-${SHORT_SHA}-* ]]; then
            echo "ðŸ›‘ Latest nightly tag is the same as the latest commit sha, skipping nightly release"
          else
            # v0.0.0-nightly-<short sha>-<date>
            NEXT_VERSION=nightly-${SHORT_SHA}
            # set output so it can be used in other jobs
            echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v3
        if: steps.version.outputs.NEXT_VERSION
        with:
          node-version: 18

      - name: Get yarn cache directory path
        if: steps.version.outputs.NEXT_VERSION
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        if: steps.version.outputs.NEXT_VERSION
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        if: steps.version.outputs.NEXT_VERSION
        run: yarn install --immutable

      - name: Build
        if: steps.version.outputs.NEXT_VERSION
        run: yarn build --filter=!@react-spring/docs

      - name: Setup npmrc
        if: steps.version.outputs.NEXT_VERSION
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - run: ./scripts/version-and-publish.sh
        if: steps.version.outputs.NEXT_VERSION
        env:
          VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
          WITH_TAG: true
          DIST_TAG: nightly
